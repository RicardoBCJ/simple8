[{"C:\\web_projects\\simpleReact\\simple\\src\\index.js":"1","C:\\web_projects\\simpleReact\\simple\\src\\store.js":"2","C:\\web_projects\\simpleReact\\simple\\src\\App.js":"3","C:\\web_projects\\simpleReact\\simple\\src\\constants\\index.js":"4","C:\\web_projects\\simpleReact\\simple\\src\\components\\Home.js":"5","C:\\web_projects\\simpleReact\\simple\\src\\components\\TodosContainer.js":"6","C:\\web_projects\\simpleReact\\simple\\src\\components\\Dashboard.js":"7","C:\\web_projects\\simpleReact\\simple\\src\\components\\About.js":"8","C:\\web_projects\\simpleReact\\simple\\src\\components\\layouts\\Navbar.js":"9","C:\\web_projects\\simpleReact\\simple\\src\\components\\Pictures.js":"10","C:\\web_projects\\simpleReact\\simple\\src\\components\\layouts\\Footer.js":"11","C:\\web_projects\\simpleReact\\simple\\src\\reducers\\rootReducer.js":"12","C:\\web_projects\\simpleReact\\simple\\src\\components\\RegisterModal.js":"13","C:\\web_projects\\simpleReact\\simple\\src\\components\\Panel.js":"14","C:\\web_projects\\simpleReact\\simple\\src\\components\\LogInModal.js":"15","C:\\web_projects\\simpleReact\\simple\\src\\components\\layouts\\Map.js":"16","C:\\web_projects\\simpleReact\\simple\\src\\reducers\\helpRequestReducer.js":"17","C:\\web_projects\\simpleReact\\simple\\src\\reducers\\usersReducers.js":"18","C:\\web_projects\\simpleReact\\simple\\src\\reducers\\todosReducer.js":"19","C:\\web_projects\\simpleReact\\simple\\src\\thunks\\fetchUser.js":"20","C:\\web_projects\\simpleReact\\simple\\src\\actions\\actionCreators.js":"21","C:\\web_projects\\simpleReact\\simple\\src\\thunks\\axiosHelpRequests.js":"22","C:\\web_projects\\simpleReact\\simple\\src\\actions\\userActions.js":"23","C:\\web_projects\\simpleReact\\simple\\src\\actions\\helpReqactions.js":"24","C:\\web_projects\\simpleReact\\simple\\src\\components\\UsersHelpRequests.js":"25","C:\\web_projects\\simpleReact\\simple\\src\\components\\ConversationsList2.js":"26","C:\\web_projects\\simpleReact\\simple\\src\\actions\\actionTypes.js":"27","C:\\web_projects\\simpleReact\\simple\\src\\components\\HelpRequestModal.js":"28","C:\\web_projects\\simpleReact\\simple\\src\\components\\OtherHelpRequests.js":"29","C:\\web_projects\\simpleReact\\simple\\src\\components\\MessagesArea.js":"30","C:\\web_projects\\simpleReact\\simple\\src\\components\\Cable.js":"31","C:\\web_projects\\simpleReact\\simple\\src\\components\\NewMessageForm2.js":"32","C:\\web_projects\\simpleReact\\simple\\src\\components\\Images.js":"33"},{"size":510,"mtime":1608737503731,"results":"34","hashOfConfig":"35"},{"size":389,"mtime":1608737561507,"results":"36","hashOfConfig":"35"},{"size":1228,"mtime":1609321687707,"results":"37","hashOfConfig":"35"},{"size":227,"mtime":1609005272350,"results":"38","hashOfConfig":"35"},{"size":3976,"mtime":1608737615019,"results":"39","hashOfConfig":"35"},{"size":2728,"mtime":1608737615044,"results":"40","hashOfConfig":"35"},{"size":992,"mtime":1608774722088,"results":"41","hashOfConfig":"35"},{"size":561,"mtime":1608737615011,"results":"42","hashOfConfig":"35"},{"size":4017,"mtime":1608737615052,"results":"43","hashOfConfig":"35"},{"size":2594,"mtime":1608737615036,"results":"44","hashOfConfig":"35"},{"size":808,"mtime":1608737615049,"results":"45","hashOfConfig":"35"},{"size":348,"mtime":1608737614905,"results":"46","hashOfConfig":"35"},{"size":9225,"mtime":1609358720110,"results":"47","hashOfConfig":"35"},{"size":3882,"mtime":1608772427046,"results":"48","hashOfConfig":"35"},{"size":4363,"mtime":1608742927290,"results":"49","hashOfConfig":"35"},{"size":6342,"mtime":1608737615050,"results":"50","hashOfConfig":"35"},{"size":1110,"mtime":1608737614904,"results":"51","hashOfConfig":"35"},{"size":553,"mtime":1608737614910,"results":"52","hashOfConfig":"35"},{"size":707,"mtime":1608737614909,"results":"53","hashOfConfig":"35"},{"size":2321,"mtime":1608771098853,"results":"54","hashOfConfig":"35"},{"size":464,"mtime":1608737615082,"results":"55","hashOfConfig":"35"},{"size":2036,"mtime":1608737614845,"results":"56","hashOfConfig":"35"},{"size":354,"mtime":1608737615121,"results":"57","hashOfConfig":"35"},{"size":698,"mtime":1608737615118,"results":"58","hashOfConfig":"35"},{"size":4349,"mtime":1609007633773,"results":"59","hashOfConfig":"35"},{"size":7571,"mtime":1609012759621,"results":"60","hashOfConfig":"35"},{"size":732,"mtime":1608737615083,"results":"61","hashOfConfig":"35"},{"size":5284,"mtime":1608776287760,"results":"62","hashOfConfig":"35"},{"size":3175,"mtime":1608737615034,"results":"63","hashOfConfig":"35"},{"size":1849,"mtime":1609008014537,"results":"64","hashOfConfig":"35"},{"size":537,"mtime":1608737615012,"results":"65","hashOfConfig":"35"},{"size":1614,"mtime":1608743163587,"results":"66","hashOfConfig":"35"},{"size":911,"mtime":1609348193532,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"lmdkqu",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\web_projects\\simpleReact\\simple\\src\\index.js",[],["150","151"],"C:\\web_projects\\simpleReact\\simple\\src\\store.js",[],"C:\\web_projects\\simpleReact\\simple\\src\\App.js",[],"C:\\web_projects\\simpleReact\\simple\\src\\constants\\index.js",[],"C:\\web_projects\\simpleReact\\simple\\src\\components\\Home.js",["152","153","154"],"import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RegisterModal from \"./RegisterModal\";\r\nimport LoginModal from \"./LogInModal\";\r\n\r\n\r\n\r\n\r\nlet heroStyle = {\r\n  backgroundColor: \"teal\",\r\n  backgroundSize: \"cover\",\r\n  backgroundPosition: \"center\",\r\n  height: \"75vh\",\r\n  minHeight: \"600px\",\r\n  position: \"relative\",\r\n  backgroundImage:\r\n    \"url(\" +\r\n    \"https://images.pexels.com/photos/265702/pexels-photo-265702.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\" +\r\n    \")\",\r\n};\r\n\r\n//let imgSt1 = {\r\n//  backgroundImage:\r\n//    \"url(\" +\r\n//    \"https://images.pexels.com/photos/734658/pexels-photo-734658.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\" +\r\n//    \")\",\r\n//};\r\n\r\n//let imgSt2 = {\r\n//  backgroundImage:\r\n//    \"url(\" +\r\n//    \"https://images.pexels.com/photos/7075/people-office-group-team.jpg?auto=compress&cs=tinysrgb&h=750&w=1260\" +\r\n//    \")\",\r\n//};\r\n\r\nexport class Home extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div style={heroStyle}>\r\n          <div className=\"showcase container\">\r\n            <div className=\"row\">\r\n              <div className=\"col s12 main-text white-text\">\r\n                <h5></h5>\r\n                <h1>Help Link</h1>\r\n                <p className=\"flow-text\">\r\n                  A place to find help and to help others\r\n                </p>\r\n                <br />\r\n                <Link\r\n                  to=\"/about\"\r\n                  className=\"waves-effect waves-light btn btn-large\"\r\n                >\r\n                  Learn More\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"main teal\">\r\n          <div className=\"container\">\r\n            <div className=\"front-idea\">\r\n              <div className=\"row\">\r\n                <div className=\"col s12 m10 cardB hoverable\">\r\n                  <h2 className=\"header white-text\">Help others</h2>\r\n                  <div className=\"card horizontal\">\r\n                    <div className=\"card-image\">\r\n                      <img src=\"https://images.pexels.com/photos/734658/pexels-photo-734658.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\"></img>\r\n                    </div>\r\n                    <div className=\"card-stacked\">\r\n                      <div className=\"card-content\">\r\n                        <p>\r\n                          Help however you can near your area. See who is asking for help, volunteer, chat, and find a solution together\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col s12 m10 offset-m2 cardB hoverable\">\r\n                  <h2 className=\"header white-text\">Request Help</h2>\r\n                  <div className=\"card horizontal\">\r\n                    <div className=\"card-image\">\r\n                      <img src=\"https://images.pexels.com/photos/7075/people-office-group-team.jpg?auto=compress&cs=tinysrgb&h=750&w=1260\"></img>\r\n                    </div>\r\n                    <div className=\"card-stacked\">\r\n                      <div className=\"card-content\">\r\n                        <p>\r\n                          Do you currently have a problem but dont see the solution? Ask for help, see who is available for helping near you\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"cta\">\r\n              <div className=\"row white actBt valign-wrapper center-align\">\r\n                <div className=\"col s12 m6\">\r\n                  <LoginModal />\r\n                </div>\r\n                <div className=\"col s12 m6\">\r\n                  <RegisterModal />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\web_projects\\simpleReact\\simple\\src\\components\\TodosContainer.js",[],"C:\\web_projects\\simpleReact\\simple\\src\\components\\Dashboard.js",[],"C:\\web_projects\\simpleReact\\simple\\src\\components\\About.js",["155","156"],"import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"react-materialize\";\r\n\r\nexport class About extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>About this project</h1>\r\n        <p>V 1.0.0</p>\r\n        <p>\r\n          {\" \"}\r\n          Model app for people to provide help to each other, done in the models\r\n          required by OpenClassrooms project 8 of fullstack developer path\r\n        </p>\r\n        <div>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","C:\\web_projects\\simpleReact\\simple\\src\\components\\layouts\\Navbar.js",["157","158","159"],"import React, { Fragment, Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchLoggedInUser } from \"../../thunks/fetchUser\";\r\nimport { logOutUser } from \"../../actions/userActions\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport LogInModal from \"../LogInModal\";\r\nimport RegisterModal from \"../RegisterModal\";\r\n\r\nclass Navbar extends Component {\r\n  componentDidMount() {\r\n    this.fetchEverything();\r\n  }\r\n\r\n  fetchEverything = () => {\r\n    this.props.fetchLoggedInUser();\r\n  };\r\n\r\n  logOut = () => {\r\n    localStorage.removeItem(\"token\");\r\n    this.props.logOutUser();\r\n    //alert(\"Succefully log out!\");\r\n    M.toast({html: \"Succesfully log out!\"})\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <header>\r\n          <nav>\r\n            <div className=\"nav-wrapper teal\">\r\n              <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">\r\n                  <i className=\"material-icons\">accessibility</i>\r\n                  <i className=\"material-icons\">accessibility</i>\r\n                  <i className=\"material-icons\">accessibility</i>Help Link\r\n                </Link>\r\n                <a\r\n                  href=\"#\"\r\n                  data-target=\"mobile-demo\"\r\n                  className=\"sidenav-trigger\"\r\n                >\r\n                  <i className=\"material-icons\">menu</i>\r\n                </a>\r\n                <ul className=\"right hide-on-med-and-down\">\r\n                  <li>\r\n                    <Link to=\"/about\">About</Link>\r\n                  </li>\r\n                  {this.props.login ? (\r\n                    <Fragment>\r\n                      <li>\r\n                        <span className=\"waves-effect waves-light btn orange darken-2\">\r\n                          Hi {this.props.name}\r\n                        </span>\r\n                      </li>\r\n                      <li>\r\n                        <a onClick={this.logOut}>Logout</a>\r\n                      </li>\r\n                      <li>\r\n                        <Link to=\"/dashboard\">Dashboard</Link>\r\n                      </li>\r\n                    </Fragment>\r\n                  ) : (\r\n                    <Fragment>\r\n                      <li className=\"modalsLI\">\r\n                        <LogInModal />\r\n                      </li>\r\n                      <li className=\"modalsLI\">\r\n                        <RegisterModal/>\r\n                      </li>\r\n                    </Fragment>\r\n                  )}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n\r\n          <ul className=\"sidenav\" id=\"mobile-demo\">\r\n            <li> Hi {this.props.user}</li>\r\n            <li>\r\n              <Link to=\"/about\">About</Link>\r\n            </li>\r\n            {this.props.login ? (\r\n              <Fragment>\r\n                <li>\r\n                  <span className=\"waves-effect waves-light btn orange darken-2\">\r\n                    Hi {this.props.name}\r\n                  </span>\r\n                </li>\r\n                <li>\r\n                  <a onClick={this.logOut}>Logout</a>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/dashboard\">Dashboard</Link>\r\n                </li>\r\n              </Fragment>\r\n            ) : (\r\n              <Fragment>\r\n                <li className=\"modalsLI\">\r\n                <LogInModal />\r\n                </li>\r\n                <li className=\"modalsLI\">\r\n                <RegisterModal/>\r\n                </li>\r\n              </Fragment>\r\n            )}\r\n          </ul>\r\n        </header>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    login: state.user.login,\r\n    name: state.user.user.name,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchLoggedInUser: () => dispatch(fetchLoggedInUser()),\r\n    logOutUser: () => dispatch(logOutUser()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","C:\\web_projects\\simpleReact\\simple\\src\\components\\Pictures.js",["160"],"import React from 'react'\r\nimport { API_ROOT } from '../constants/index'\r\n\r\nclass Pictures extends React.Component {\r\n    state = {\r\n        pictures: [],\r\n        number_columns: 4,\r\n        loading: true,\r\n        user: 1,\r\n        picture: '',\r\n      }\r\n  \r\n  \r\n    render() {\r\n      if (this.state.loading) return null\r\n  \r\n      return(\r\n        <div className=\"pictures_container\">\r\n  \r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"file_upload\">Upload Picture</label>\r\n                  <input type=\"file\" className=\"form-control-file\" id=\"file_upload\" onChange={this.handleFileInputChange} />\r\n                  <button onClick={this.loadPicture}/>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n          {this.pictureRows().map((pictureRow, rowIndex) =>\r\n          <div key={`picture_row_${rowIndex}`} className=\"row\">\r\n            {pictureRow.map((picture, columnIndex) =>\r\n              <div key={`picture_row_${rowIndex}_col_${columnIndex}`} className=\"col-sm-3\">\r\n                <img data-id={picture.id} src={`${picture.attachment_url}`} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n  \r\n         \r\n        </div>\r\n      )\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.loadPictures()\r\n    }\r\n  \r\n    loadPictures() {\r\n      \r\n      fetch(`${API_ROOT}/pictures.json`)\r\n        .then((response) => response.json())\r\n        .then((pictures) =>\r\n          this.setState({\r\n            pictures: pictures,\r\n            loading: false\r\n          })\r\n        )\r\n        console.log(this.state)\r\n    }\r\n  \r\n    handleFileInputChange(event) {\r\n      let body = new FormData()\r\n      console.log(event.target.files[0])\r\n      this.setState({ picture: event.target.files[0]})\r\n      body.append('picture[attachment]', event.target.files[0] )\r\n      body.append('picture[user_id]', this.state.user )\r\n      fetch(\r\n        `${API_ROOT}/pictures.json`,\r\n        {\r\n          method: 'post',\r\n          body: body\r\n        }\r\n      )\r\n      .then((response) => response.json(), \r\n      )\r\n    }\r\n  \r\n    pictureRows() {\r\n      let rows = []\r\n      let row = []\r\n      this.state.pictures.forEach((picture) => {\r\n        row.push(picture)\r\n        if (row.length === this.state.number_columns) {\r\n          rows.push(row)\r\n          row = []\r\n        }\r\n      })\r\n      if (row.length > 0) {\r\n        rows.push(row)\r\n      }\r\n      return rows\r\n    }\r\n \r\n\r\n    \r\n  }\r\n  \r\n  export default Pictures","C:\\web_projects\\simpleReact\\simple\\src\\components\\layouts\\Footer.js",[],"C:\\web_projects\\simpleReact\\simple\\src\\reducers\\rootReducer.js",[],"C:\\web_projects\\simpleReact\\simple\\src\\components\\RegisterModal.js",["161","162","163"],"import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createUser } from \"../thunks/fetchUser\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport { Modal, Button } from \"react-materialize\";\r\nimport axios from \"axios\";\r\nimport { API_ROOT } from \"../constants/index\";\r\n\r\nclass RegisterModal extends Component {\r\n  state = {\r\n    user_id: \"\",\r\n    date: \"\",\r\n    name: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    emailError: \"\",\r\n    passwordError: \"\",\r\n    nameError: \"\",\r\n    lastnameError: \"\",\r\n    image: null,\r\n    imageError: \"\",\r\n    image2Cloudinary: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  fileSelectedHandler = (event) => {\r\n    console.log(event.target.files[0]);\r\n    this.setState({\r\n      image: event.target.files[0],\r\n      image2Cloudinary: event.target.files[0],\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    // let passwordError=\"\"\r\n    let isValid = true;\r\n    let passwordError = \"\";\r\n    let emailError = \"\";\r\n    let nameError = \"\";\r\n    let lastnameError = \"\";\r\n    let imageError = \"\";\r\n    let image2CloudinaryError = \"\";\r\n\r\n    if (!this.state.email || !this.state.email.includes(\"@\")) {\r\n      emailError = \"Invalid email\";\r\n    }\r\n\r\n    if (!this.state.password) {\r\n      passwordError = \"Password can't be empty.\";\r\n    }\r\n\r\n    if (!this.state.name) {\r\n      nameError = \"Name can't be empty.\";\r\n    }\r\n\r\n    if (!this.state.lastname) {\r\n      lastnameError = \"Last Name can't be empty.\";\r\n    }\r\n\r\n    if (this.state.image === null) {\r\n      imageError =\r\n        'You need to upload a \"legal document\" *wink wink* PS: Please a fake document ';\r\n    }\r\n\r\n    if (this.state.image2Cloudinary === \"\") {\r\n      image2CloudinaryError =\r\n        'You need to upload a \"legal document\" *wink wink* PS: Please a fake document ';\r\n    }\r\n\r\n    if (\r\n      emailError ||\r\n      passwordError ||\r\n      nameError ||\r\n      lastnameError ||\r\n      imageError ||\r\n      image2CloudinaryError\r\n    ) {\r\n      this.setState({\r\n        emailError,\r\n        passwordError,\r\n        nameError,\r\n        lastnameError,\r\n        imageError,\r\n      });\r\n      isValid = false;\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.validate()) {\r\n      console.log(this.state);\r\n      console.log(this.state.image);\r\n      console.log(this.state.image2Cloudinary);\r\n\r\n      // var body = new FormData();\r\n      // body.append(\"picture[attachment]\", this.state.image);\r\n      // for (var pair of body.entries()) {\r\n      //   console.log(pair[0] + \", \" + pair[1]);\r\n      // }\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"file\", this.state.image2Cloudinary);\r\n      formData.append(\"upload_preset\", \"simple8Front\");\r\n\r\n      axios({\r\n        method: \"post\",\r\n        responseType: \"json\",\r\n        url: `${API_ROOT}/signup`,\r\n        data: {\r\n          name: this.state.name,\r\n          lastname: this.state.lastname,\r\n          email: this.state.email,\r\n          password: this.state.password,\r\n        },\r\n      }).then((response) => {\r\n        if (response.data.error === \"Error creating account\") {\r\n          alert(\"This emails is allready taken, please use another\");\r\n        }\r\n        console.log(response.data.user);\r\n        console.log(response.data);\r\n        let finU = response.data.user;\r\n        console.log(finU);\r\n        for (let key in finU) {\r\n          if (key == \"id\") {\r\n            let uid = finU[key];\r\n            console.log(finU[key]);\r\n            console.log(uid);\r\n            axios\r\n              .post(\r\n                \"https://api.cloudinary.com/v1_1/dl4mlrpmw/image/upload\",\r\n                formData\r\n              )\r\n              .then((Response) => {\r\n                let imageUrl = Response.data.url\r\n                axios({\r\n                  method: \"put\",\r\n                  responseType: \"json\",\r\n                  url: `${API_ROOT}/users/${uid}`,\r\n                  data: {\r\n                    imageurl: imageUrl,\r\n                                  \r\n                }\r\n              });\r\n            // body.append(\"picture[user_id]\", uid);\r\n              })\r\n        }}\r\n        // for (var pair of body.entries()) {\r\n        //   console.log(pair[0] + \", \" + pair[1]);\r\n        // }\r\n        // fetch(\r\n        //   `${API_ROOT}/pictures.json`,\r\n        //   {\r\n        //     method: 'post',\r\n        //     body: body\r\n        //   }\r\n        // )\r\n        // .then((response) => response.json(),\r\n        // )\r\n      // });\r\n      })\r\n      this.setState({\r\n        email: \"\",\r\n        password: \"\",\r\n        name: \"\",\r\n        lastname: \"\",\r\n        image: null,\r\n        image2Cloudinary: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Button\r\n          className=\"modal-trigger orange darken-2\"\r\n          href=\"#modal2\"\r\n          node=\"button\"\r\n        >\r\n          Register\r\n        </Button>\r\n\r\n        <Modal\r\n          actions={[\r\n            <Button flat modal=\"close\" node=\"button\" waves=\"green\">\r\n              Close\r\n            </Button>,\r\n          ]}\r\n          bottomSheet={false}\r\n          fixedFooter={false}\r\n          //header=\"Modal Header\"\r\n          id=\"modal2\"\r\n          open={false}\r\n          options={{\r\n            dismissible: true,\r\n            endingTop: \"10%\",\r\n            inDuration: 250,\r\n            onCloseEnd: null,\r\n            onCloseStart: null,\r\n            onOpenEnd: null,\r\n            onOpenStart: null,\r\n            opacity: 0.5,\r\n            outDuration: 250,\r\n            preventScrolling: true,\r\n            startingTop: \"4%\",\r\n          }}\r\n        >\r\n          <div className=\"modal-content\">\r\n            <h6 className=\"btn\">Sign up for your account</h6>\r\n          </div>\r\n          <div className=\"modal-content\">\r\n            <div className=\"row\">\r\n              <div className=\"input-field\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.name}\r\n                />\r\n                <label htmlFor=\"name\" className=\"active\">\r\n                  Name\r\n                </label>\r\n                {this.state.nameError ? (\r\n                  <div className=\"error\">{this.state.nameError}</div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-content\">\r\n            <div className=\"row\">\r\n              <div className=\"input-field\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"lastname\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.lastname}\r\n                />\r\n                <label htmlFor=\"lastname\">Last Name</label>\r\n                {this.state.lastnameError ? (\r\n                  <div className=\"error\">{this.state.lastnameError}</div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-content\">\r\n            <div className=\"row\">\r\n              <div className=\"input-field\">\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.email}\r\n                />\r\n                <label htmlFor=\"email\" className=\"active\">\r\n                  email\r\n                </label>\r\n                {this.state.emailError ? (\r\n                  <div className=\"error\">{this.state.emailError}</div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-content\">\r\n            <div className=\"row\">\r\n              <div className=\"input-field\">\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.password}\r\n                />\r\n                <label htmlFor=\"password\" className=\"active\">\r\n                  Password\r\n                </label>\r\n                {this.state.passwordError ? (\r\n                  <div className=\"error\">{this.state.passwordError}</div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p>\r\n            Please select a legal document(A FAKE ONE, THIS IS A STUDENT\r\n            PROJECT)\r\n          </p>\r\n          <input type=\"file\" onChange={this.fileSelectedHandler} />\r\n          {this.state.imageError ? (\r\n            <div className=\"error\">{this.state.imageError}</div>\r\n          ) : null}\r\n\r\n          <div className=\"modal-footer\">\r\n            <a\r\n              className=\"modal-close waves-effect waves-green btn\"\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Submit\r\n            </a>\r\n          </div>\r\n        </Modal>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createUser: (userInfo) => dispatch(createUser(userInfo)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterModal);\r\n","C:\\web_projects\\simpleReact\\simple\\src\\components\\Panel.js",[],"C:\\web_projects\\simpleReact\\simple\\src\\components\\LogInModal.js",["164","165","166","167","168","169"],"import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUserFetch } from \"../thunks/fetchUser\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { Modal, Button } from \"react-materialize\";\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  emailError: \"\",\r\n  passwordError: \"\",\r\n};\r\n\r\nclass LogInUser extends Component {\r\n  state = initialState;\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n\r\n\r\n  validate = () => {\r\n    // let passwordError=\"\"\r\n    let isValid = true;\r\n    let passwordError = \"\";\r\n    let emailError = \"\";\r\n\r\n    if (!this.state.email || !this.state.email.includes(\"@\")) {\r\n      emailError = \"Invalid email\";\r\n    }\r\n\r\n    if (!this.state.password) {\r\n      passwordError = \"You have to enter password to log in\";\r\n    }\r\n\r\n    if (emailError || passwordError) {\r\n      this.setState({ emailError, passwordError });\r\n      isValid = false;\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.validate()) {\r\n      this.props.loginUserFetch(this.state);\r\n      this.setState(initialState);\r\n    }\r\n  };\r\n\r\n  authenticateUser = (j) => {\r\n    if (j.status === \"error\") {\r\n      alert(j.message);\r\n    } else {\r\n      this.props.loginUserFetch(j);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Button className=\"modal-trigger orange darken-2\" href=\"#modal1\" node=\"button\">\r\n          Log In\r\n        </Button>\r\n\r\n        <Modal\r\n          actions={[\r\n            <Button flat modal=\"close\" node=\"button\" waves=\"green\">\r\n              Close\r\n            </Button>,\r\n          ]}\r\n          bottomSheet={false}\r\n          fixedFooter={false}\r\n          //header=\"Modal Header\"\r\n          id=\"modal1\"\r\n          open={false}\r\n          options={{\r\n            dismissible: true,\r\n            endingTop: \"10%\",\r\n            inDuration: 250,\r\n            onCloseEnd: null,\r\n            onCloseStart: null,\r\n            onOpenEnd: null,\r\n            onOpenStart: null,\r\n            opacity: 0.5,\r\n            outDuration: 250,\r\n            preventScrolling: true,\r\n            startingTop: \"4%\",\r\n          }}\r\n        >\r\n          <div className=\"modal-content\">\r\n            <h6 className=\"btn\">Sign in your account</h6>\r\n          </div>\r\n          <div className=\"modal-content\">\r\n            <h6>Enter Email</h6>\r\n            <div className=\"row\">\r\n              <div className=\"input-field\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.email}\r\n                />\r\n                <label htmlFor=\"email\" className=\"active\">\r\n                  email\r\n                </label>\r\n                {this.state.emailError ? (\r\n                  <div className=\"error\">{this.state.emailError}</div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-content\">\r\n            <h6>Enter Password</h6>\r\n            <div className=\"row\">\r\n              <div className=\"input-field\">\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.password}\r\n                />\r\n                <label htmlFor=\"password\" className=\"active\">\r\n                  Password\r\n                </label>\r\n                {this.state.passwordError ? (\r\n                  <div className=\"error\">{this.state.passwordError}</div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <a\r\n              href=\"/\"\r\n              className=\"waves-effect waves-green btn\"\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Submit\r\n            </a>\r\n          </div>\r\n        </Modal>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loginUserFetch: (userInfo) => dispatch(loginUserFetch(userInfo)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LogInUser);\r\n","C:\\web_projects\\simpleReact\\simple\\src\\components\\layouts\\Map.js",["170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"import React, {\r\n  Component,\r\n  useState,\r\n  useRef,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\";\r\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\r\nimport { connect } from \"react-redux\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport { joinHelpRequest } from \"../../actions/helpReqactions\";\r\nimport axios from \"axios\";\r\nimport { marker } from \"leaflet\";\r\nimport L from \"leaflet\";\r\n//import { useMap, useMapEvent, useMapEvents } from 'leaflet'\r\nimport { useMapEvents } from \"react-leaflet\";\r\nimport { API_ROOT, HEADERS } from \"../../constants/index\";\r\n\r\nclass MyMap extends Component {\r\n \r\n  joiningHelpRequest(id, helpers, user) {\r\n    return (dispatch) => {\r\n      axios({\r\n        method: \"put\",\r\n        responseType: \"json\",\r\n        url: `${API_ROOT}/help_requests/${id}`,\r\n        data: {\r\n          condition: \"help needed\",\r\n          helpers: helpers + user + \",\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          var dataId = response.data.id\r\n          var dataHelpers = response.data.helpers\r\n          var dataUser = response.data.user_id\r\n          console.log(dataId)\r\n          console.log(dataHelpers)\r\n          console.log(dataUser)\r\n          this.props.joiningHelpRequest(\r\n            response.data.id,\r\n            response.data.helpers,\r\n            response.data.user_id\r\n          );\r\n          axios({\r\n            method: \"put\",\r\n            responseType: \"json\",\r\n            url: `${API_ROOT}/conversations/${dataId}`,\r\n            data: {\r\n              \"participants\": dataUser + \",\" + dataHelpers,\r\n            },\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n      console.log(\"called\");\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const UserId = this.props.userId;\r\n    const position = [0, 0];\r\n\r\n    const center = {\r\n      lat: 51.505,\r\n      lng: -0.09,\r\n    };\r\n\r\n\r\n    function LocationMarker() {\r\n      const [position, setPosition] = useState(null);\r\n      const map = useMapEvents({\r\n        click() {\r\n          map.locate();\r\n        },\r\n        locationfound(e) {\r\n          setPosition(e.latlng);\r\n          console.log(e.latlng);\r\n          map.flyTo(e.latlng, 12);\r\n        },\r\n      });\r\n\r\n      return position === null ? null : (\r\n        <Marker position={position}>\r\n          <Popup>You are here</Popup>\r\n        </Marker>\r\n      );\r\n    }\r\n\r\n    function GetIcon(_iconSize) {\r\n      return L.icon({\r\n        iconUrl: require('../../static/icons/material.png'),\r\n        iconSize: [_iconSize]\r\n      })\r\n    }\r\n\r\n    function GetIcon2(_iconSize) {\r\n      return L.icon({\r\n        iconUrl: require('../../static/icons/task.png'),\r\n        iconSize: [_iconSize]\r\n \r\n      })\r\n    }\r\n\r\n   \r\n\r\n    const MarkersReq = Object.entries(this.props.helpReqs).map(([k, v]) => {\r\n      const position2 = [v.latitude, v.longitude];\r\n\r\n      const checkHelpers = (helpers, user) => {\r\n        console.log(\"the current user is \" + user)\r\n        if (helpers != null) {\r\n          let helpersList = helpers.split(\",\");\r\n          if (\r\n            helpersList.includes(user+ \"\") === true ||\r\n            helpersList.length >= 6\r\n          ) {\r\n            return false;\r\n          } else {\r\n            return true;\r\n          }\r\n        } else {\r\n          return true\r\n        }\r\n      };\r\n\r\n\r\n      if (\r\n        v.user_id != UserId &&\r\n        UserId != null &&\r\n        v.condition == \"help needed\" &&\r\n        checkHelpers(v.helpers, UserId) == true &&\r\n        //console.log(\"the current help id is \"+ v.id+\" and it checks as \"+checkHelpers(v.helpers, UserId)) &&\r\n        v.latitude != null &&\r\n        v.longitude != null &&\r\n        v.kind == \"task\"\r\n      ) {\r\n        return (\r\n          <Marker position={position2} key={v.id} icon={GetIcon2(20)}>\r\n            <Popup>\r\n              <div>\r\n                <p>{v.title}</p>\r\n                <p>{v.kind}</p>\r\n                <p>{v.description}</p>\r\n                <p>{v.helpers}</p>\r\n\r\n                <a\r\n                  className=\"waves-effect waves-light btn orange white-text darken-2\"\r\n                  onClick={this.joiningHelpRequest(v.id, v.helpers, UserId)}\r\n                >\r\n                  help\r\n                </a>\r\n                {console.log(UserId)}\r\n              </div>\r\n            </Popup>\r\n          </Marker>\r\n        );\r\n      } else if (\r\n        v.user_id != UserId &&\r\n        UserId != null &&\r\n        v.condition == \"help needed\" &&\r\n        checkHelpers(v.helpers, UserId) == true &&\r\n        //console.log(\"the current help id is \"+ v.id+\" and it checks as \"+checkHelpers(v.helpers, UserId)) &&\r\n        v.latitude != null &&\r\n        v.longitude != null &&\r\n        v.kind == \"material\"\r\n      ) {\r\n        return (\r\n          <Marker position={position2} key={v.id} icon={GetIcon(20)}>\r\n            <Popup>\r\n              <div>\r\n                <p>{v.title}</p>\r\n                <p>{v.kind}</p>\r\n                <p>{v.description}</p>\r\n                <p>{v.helpers}</p>\r\n\r\n                <a\r\n                  className=\"waves-effect waves-light btn orange white-text darken-2\"\r\n                  onClick={this.joiningHelpRequest(v.id, v.helpers, UserId)}\r\n                >\r\n                  help\r\n                </a>\r\n                {console.log(UserId)}\r\n              </div>\r\n            </Popup>\r\n          </Marker>\r\n        );\r\n      }\r\n    });\r\n    return (\r\n      <MapContainer center={[0, 0]} zoom={3} scrollWheelZoom={false}>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {console.log(marker)}\r\n        <LocationMarker />\r\n\r\n        {MarkersReq}\r\n        <p alt=\"icons from flat icon Icons made https://www.flaticon.com/authors/srip titleFlaticon www.flaticon.com\"></p>\r\n      </MapContainer>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    helpReqs: state.helpRequests,\r\n    userId: state.user.user.id,\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    joiningHelpRequest: (id, helpers, user) =>\r\n      dispatch(joinHelpRequest(id, helpers, user)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyMap);\r\n","C:\\web_projects\\simpleReact\\simple\\src\\reducers\\helpRequestReducer.js",[],"C:\\web_projects\\simpleReact\\simple\\src\\reducers\\usersReducers.js",[],"C:\\web_projects\\simpleReact\\simple\\src\\reducers\\todosReducer.js",[],"C:\\web_projects\\simpleReact\\simple\\src\\thunks\\fetchUser.js",["188","189","190","191"],"import { loginUser } from \"../actions/userActions\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport { API_ROOT } from \"../constants/index\";\r\n\r\n\r\nexport function loginUserFetch(userInfo) {\r\n  return (dispatch) =>\r\n    fetch(`${API_ROOT}/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(userInfo),\r\n    })\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n        if (data.status == \"error\") {\r\n          //alert(data.message);\r\n          M.toast({ html: data.message });\r\n        } else {\r\n          let user_json = JSON.parse(data.user);\r\n          localStorage.setItem(\"token\", data.jwt);\r\n          dispatch(loginUser(user_json));\r\n          M.toast({ html: \"loged in\" });\r\n        }\r\n      });\r\n}\r\n\r\nexport function createUser(userinfo, image) {\r\n  return (dispatch) =>\r\n    fetch(`${API_ROOT}/signup`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(userinfo),\r\n    })\r\n      .then((r) => {\r\n        return r.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.error) {\r\n          alert(data.error);\r\n        } else {\r\n          localStorage.setItem(\"token\", data.jwt);\r\n          dispatch(loginUser(data.user));\r\n          const userFR = data.user.id;\r\n          var body = new FormData();\r\n          body.append(\"picture[attachment]\", image);\r\n          body.append(\"picture[user_id]\", data.user.id);\r\n          fetch(`${API_ROOT}/pictures.json`, {\r\n            method: \"post\",\r\n            body: body,\r\n          });\r\n        }\r\n      });\r\n}\r\n\r\nexport function fetchLoggedInUser() {\r\n  return (dispatch) => {\r\n    const token = localStorage.token;\r\n    if (token) {\r\n      return fetch(`${API_ROOT}/auto-login`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          if (data.status == \"error\") {\r\n            alert(data.status == \"error\");\r\n            localStorage.removeItem(\"token\");\r\n          } else {\r\n            dispatch(loginUser(data));\r\n          }\r\n        });\r\n    }\r\n  };\r\n}\r\n\r\n\r\n","C:\\web_projects\\simpleReact\\simple\\src\\actions\\actionCreators.js",[],"C:\\web_projects\\simpleReact\\simple\\src\\thunks\\axiosHelpRequests.js",[],"C:\\web_projects\\simpleReact\\simple\\src\\actions\\userActions.js",[],"C:\\web_projects\\simpleReact\\simple\\src\\actions\\helpReqactions.js",["192","193"],"import {\r\n  LOAD_HELP_REQUESTS,\r\n  LOAD_HELP_REQUEST,\r\n  ADD_HELP_REQUESTS,\r\n  UPDATE_HELP_REQUESTS,\r\n  DELETE_HELP_REQUESTS,\r\n  JOIN_HELP_REQUEST,\r\n} from \"./actionTypes\";\r\n\r\nexport const loadRequests = (helpReqs) => {\r\n  return {\r\n    type: LOAD_HELP_REQUESTS,\r\n    helpRequests: helpReqs,\r\n  };\r\n};\r\n\r\nexport const addHelpRequest = (helpReq) => {\r\n  return {\r\n    type: ADD_HELP_REQUESTS,\r\n    helpRequest: helpReq,\r\n  };\r\n};\r\n\r\nexport const uppdateRequest = (res) => {\r\n  return {\r\n    type: UPDATE_HELP_REQUESTS,\r\n    response: res,\r\n  };\r\n};\r\n\r\nexport const joinHelpRequest = (res, helpers) => {\r\n  return {\r\n    type: JOIN_HELP_REQUEST,\r\n    response: res,\r\n    helpers: helpers,\r\n  };\r\n};\r\n","C:\\web_projects\\simpleReact\\simple\\src\\components\\UsersHelpRequests.js",["194","195","196","197","198","199","200","201"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { uppdateRequest } from \"../actions/helpReqactions\";\r\nimport { API_ROOT } from \"../constants/index\";\r\n\r\nexport const UsersHelpRequests = (props) => {\r\n  const UserId = props.UserId;\r\n\r\n  const updatingHelpRequest = (id) => {\r\n    return (dispatch) => {\r\n      axios({\r\n        method: \"put\",\r\n        responseType: \"json\",\r\n        url: `${API_ROOT}/help_requests/${id}`,\r\n        data: {\r\n          condition: \"completed\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          props.uppdateRequest(response.data.id);\r\n          axios({\r\n            method: \"put\",\r\n            responseType: \"json\",\r\n            url: `${API_ROOT}/conversations/${id}`,\r\n            data: {\r\n              complete: true,\r\n            },\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n      console.log(\"called\");\r\n    };\r\n  };\r\n\r\n  const updatingHelpRequest2 = (id, user) => {\r\n    return (dispatch) => {\r\n      axios({\r\n        method: \"put\",\r\n        responseType: \"json\",\r\n        url: `${API_ROOT}/help_requests/${id}`,\r\n        data: {\r\n          condition: \"help needed\",\r\n          helpers: null,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          props.uppdateRequest(response.data.id);\r\n          axios({\r\n            method: \"put\",\r\n            responseType: \"json\",\r\n            url: `${API_ROOT}/conversations/${id}`,\r\n            data: {\r\n              complete: null,\r\n              participants: user + \"\",\r\n            },\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n      console.log(\"called\");\r\n    };\r\n  };\r\n\r\n  const UserHelpReq = Object.entries(props.UserHelpReqs).map(([k, v]) => {\r\n    if (v.user_id == UserId && v.condition != \"completed\")\r\n      return (\r\n        <tbody key={v.id}>\r\n          <tr>\r\n            <td>Name</td>\r\n            <td>{v.title}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Description</td>\r\n            <td>{v.description}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Address</td>\r\n            <td>{v.address}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Kind</td>\r\n            <td>{v.kind}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Condition</td>\r\n            <td>\r\n              {v.condition == \"ongoing\" ? (\r\n                <span>\r\n                  <a\r\n                    className=\"waves-effect waves-light btn orange darken-2\"\r\n                    onClick={updatingHelpRequest(v.id)}\r\n                  >\r\n                    <i className=\"material-icons left\">beenhere</i>mark as\r\n                    completed\r\n                  </a>\r\n                  <a\r\n                    className=\"waves-effect waves-light btn pink darken-2\"\r\n                    onClick={updatingHelpRequest2(v.id, props.UserId)}\r\n                  >\r\n                    <i className=\"material-icons left\">beenhere</i>request\r\n                    republish\r\n                  </a>\r\n                </span>\r\n              ) : (\r\n                <span>\r\n                  <i className=\"material-icons left\">beenhere</i>Waiting for\r\n                  updates{\" \"}\r\n                  <span className=\"waves-effect waves-light btn orange darken-2\">\r\n                    {v.condition}\r\n                  </span>\r\n                  <a\r\n                    className=\"waves-effect waves-light btn orange darken-2\"\r\n                    onClick={updatingHelpRequest(v.id)}\r\n                  >\r\n                    <i className=\"material-icons left\">beenhere</i>mark as\r\n                    completed\r\n                  </a>\r\n                </span>\r\n              )}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"teal\" id=\"table-divider\"></td>\r\n            <td className=\"teal lighten-2\" id=\"table-divider\"></td>\r\n          </tr>\r\n        </tbody>\r\n      );\r\n  });\r\n  return <table className=\"striped responsive-table\">{UserHelpReq}</table>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    uppdateRequest: (updated) => dispatch(uppdateRequest(updated)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersHelpRequests);\r\n","C:\\web_projects\\simpleReact\\simple\\src\\components\\ConversationsList2.js",["202","203","204","205","206","207","208","209"],"import React from \"react\";\r\nimport { ActionCable } from \"react-actioncable-provider\";\r\nimport { API_ROOT, HEADERS } from \"../constants\";\r\nimport Cable from \"./Cable\";\r\nimport MessagesArea from \"./MessagesArea\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ConversationsList2 extends React.Component {\r\n  state = {\r\n    conversations: [],\r\n    activeConversation: null,\r\n    activeUserId: this.props.CurrentUser + \"\",\r\n    activeUserName: this.props.CurrentUserName,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    fetch(`${API_ROOT}/conversations`)\r\n      .then((res) => res.json())\r\n      .then((conversations) => this.setState({ conversations }))\r\n      .then(console.log(this.state.conversations));\r\n\r\n    this.myInterval = setInterval(() => {\r\n      let convs = this.state.conversations;\r\n      for (let conv in convs) {\r\n        let ec = convs[conv];\r\n        if (ec.participants.split(\",\").length >= 7 && ec.fullat2 == null) {\r\n          console.log(ec.id + \" is full\");\r\n          console.log(ec.fullat2);\r\n          console.log(ec.id);\r\n          console.log(ec.fullat2);\r\n          axios({\r\n            method: \"put\",\r\n            responseType: \"json\",\r\n            url: `${API_ROOT}/conversations/${ec.id}`,\r\n            data: {\r\n              fullat2: Date.now(),\r\n            },\r\n          });\r\n          fetch(`${API_ROOT}/conversations`)\r\n            .then((res) => res.json())\r\n            .then((conversations) => this.setState({ conversations }))\r\n            .then(console.log(this.state.conversations));\r\n        } else if (\r\n          ec.participants.split(\",\").length >= 7 &&\r\n          ec.fullat2 !== null\r\n        ) {\r\n          console.log(\"participants are full and we have a date\");\r\n          let nowTime = Date.now();\r\n          console.log(\r\n            \"the difference between now and when it was full is \" +\r\n              (nowTime - ec.fullat2)\r\n          );\r\n          if (nowTime - ec.fullat2 >= 86400000) {\r\n            console.log(\r\n              \"more than 1440 minutes have passed (or 24 hours!), lets reset for the sake of testing\"\r\n            );\r\n            let arrOfH = ec.participants.split(\",\");\r\n            axios({\r\n              method: \"put\",\r\n              responseType: \"json\",\r\n              url: `${API_ROOT}/help_requests/${ec.id}`,\r\n              data: {\r\n                condition: \"ongoing\",\r\n                helpers: null,\r\n              },\r\n            })\r\n              .then((response) => {\r\n                //this.props.uppdateRequest(response.data.id);\r\n                axios({\r\n                  method: \"put\",\r\n                  responseType: \"json\",\r\n                  url: `${API_ROOT}/conversations/${ec.id}`,\r\n                  data: {\r\n                    complete: null,\r\n                    participants: arrOfH[0] + \"\",\r\n                    fullat2: null,\r\n                  },\r\n                });\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n              });\r\n            console.log(\"called\");\r\n            fetch(`${API_ROOT}/conversations`)\r\n              .then((res) => res.json())\r\n              .then((conversations) => this.setState({ conversations }))\r\n              .then(console.log(this.state.conversations));\r\n          }\r\n        } else {\r\n          console.log(ec.id + \" is not full\");\r\n        }\r\n      }\r\n    }, 10000);\r\n  };\r\n\r\n  forceUpdateOnClick = () => {\r\n    this.forceUpdate();\r\n    fetch(`${API_ROOT}/conversations`)\r\n      .then((res) => res.json())\r\n      .then((conversations) => this.setState({ conversations }))\r\n      .then(console.log(this.state.conversations));\r\n  };\r\n\r\n  handleClick = (id) => {\r\n    this.setState({ activeConversation: id });\r\n  };\r\n\r\n  handleReceivedConversation = (response) => {\r\n    const { conversation } = response;\r\n    this.setState({\r\n      conversations: [...this.state.conversations, conversation],\r\n    });\r\n  };\r\n\r\n  handleReceivedMessage = (response) => {\r\n    console.log(response)\r\n    const { message } = response;\r\n    const conversations = [...this.state.conversations];\r\n    const conversation = conversations.find(\r\n      (conversation) => conversation.id === message.conversation_id\r\n    );\r\n    conversation.messages = [...conversation.messages, message];\r\n    function removeDuplicates(originalArray, prop) {\r\n      var newArray = [];\r\n      var lookupObject  = {};\r\n   \r\n      for(var i in originalArray) {\r\n         lookupObject[originalArray[i][prop]] = originalArray[i];\r\n      }\r\n   \r\n      for(i in lookupObject) {\r\n          newArray.push(lookupObject[i]);\r\n      }\r\n       return newArray;\r\n   }\r\n   conversation.messages = removeDuplicates(conversation.messages, \"id\")\r\n    this.setState({ conversations });\r\n  };\r\n\r\n  render = () => {\r\n    const { conversations, activeConversation } = this.state;\r\n\r\n    return (\r\n      <div className=\"conversationsList\">\r\n        <ActionCable\r\n          channel={{ channel: \"ConversationsChannel\" }}\r\n          onReceived={this.handleReceivedConversation}\r\n        />\r\n        {this.state.conversations.length ? (\r\n          <Cable\r\n            conversations={conversations}\r\n            handleReceivedMessage={this.handleReceivedMessage}\r\n          />\r\n        ) : null}\r\n        <div>\r\n          <h4>Available Chats</h4>\r\n          <button\r\n            className=\"waves-effect waves-light btn orange darken-2\"\r\n            onClick={this.forceUpdateOnClick}\r\n          >\r\n            <i className=\"material-icons left\">refresh</i>\r\n            Refresh\r\n          </button>\r\n          \r\n          {mapConversations(\r\n            conversations,\r\n            this.handleClick,\r\n            this.props.CurrentUser\r\n          )}\r\n        </div>\r\n        <div className=\"chat-box\">\r\n          {activeConversation ? (\r\n            <MessagesArea\r\n              conversation={findActiveConversation(\r\n                conversations,\r\n                activeConversation\r\n              )}\r\n              activeUserName={this.props.CurrentUserName}\r\n              activeUserID={this.props.CurrentUser + \"\"}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst findActiveConversation = (conversations, activeConversation) => {\r\n  return conversations.find(\r\n    (conversation) => conversation.id === activeConversation\r\n  );\r\n};\r\n\r\nconst mapConversations = (conversations, handleClick, userID) => {\r\n  let currentUserConv = userID + \"\";\r\n  return conversations.map((conversation) => {\r\n    let conversationParticipants = conversation.participants.split(\",\");\r\n    if (conversation.complete == true) {\r\n      return;\r\n    } else if (conversationParticipants[0] == currentUserConv) {\r\n      return (\r\n        <a\r\n          className=\"waves-effect waves-light btn p-chats\"\r\n          key={conversation.id}\r\n          value={conversation.id}\r\n          onClick={() => handleClick(conversation.id)}\r\n        >\r\n          {conversation.title}\r\n          <span className=\"span-for-chat teal-text\">Request you made</span>\r\n        </a>\r\n      );\r\n    } else if (conversationParticipants.includes(currentUserConv)) {\r\n      return (\r\n        <a\r\n          className=\"waves-effect waves-light btn p-chats orange darken-2\"\r\n          key={conversation.id}\r\n          value={conversation.id}\r\n          onClick={() => handleClick(conversation.id)}\r\n        >\r\n          {conversation.title}\r\n          <span className=\"span-for-chat teal-text\">\r\n            Request you are helping\r\n          </span>\r\n        </a>\r\n      );\r\n    }\r\n  });\r\n};\r\n\r\n\r\n\r\nexport default ConversationsList2;\r\n","C:\\web_projects\\simpleReact\\simple\\src\\actions\\actionTypes.js",[],"C:\\web_projects\\simpleReact\\simple\\src\\components\\HelpRequestModal.js",["210"],"import React, { Component, Fragment } from \"react\";\r\nimport { makeHelpRequest } from \"../thunks/axiosHelpRequests\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Button, RadioGroup } from \"react-materialize\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\n\r\n\r\nexport class HelpRequestModal extends Component {\r\n  state = {\r\n    title: \"\",\r\n    date: \"\",\r\n    user_id: this.props.userId,\r\n    kind: \"\",\r\n    address: \"\",\r\n    helpers: null,\r\n    description: \"\",\r\n    condition: \"help needed\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  \r\n\r\n  validate = () => {\r\n    // let passwordError=\"\"\r\n    let isValid = true;\r\n    let submissionError = \"\";\r\n\r\n    if (\r\n      !this.state.title ||\r\n      !this.state.kind ||\r\n      !this.state.address ||\r\n      !this.state.description\r\n    ) {\r\n      submissionError = \"Invalid, please include all fields\";\r\n    }\r\n\r\n    if (submissionError) {\r\n      this.setState({ submissionError });\r\n      isValid = false;\r\n      console.log(\"error mate\");\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.validate()) {\r\n      this.props.makeHelpRequest(this.state);\r\n      this.setState({\r\n        title: \"\",\r\n        date: \"\",\r\n        user_id: this.props.userId,\r\n        kind: \"\",\r\n        address: \"\",\r\n        helpers: null,\r\n        description: \"\",\r\n        condition: \"help needed\",\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Button\r\n          className=\"modal-trigger orange darken-2\"\r\n          href=\"#modal3\"\r\n          node=\"button\"\r\n        >\r\n          Create Help Request\r\n        </Button>\r\n        <Modal\r\n          actions={[\r\n            <Button flat modal=\"close\" node=\"button\" waves=\"green\">\r\n              Close\r\n            </Button>,\r\n          ]}\r\n          bottomSheet={false}\r\n          fixedFooter={false}\r\n          //header=\"Modal Header\"\r\n          id=\"modal3\"\r\n          open={false}\r\n          options={{\r\n            dismissible: true,\r\n            endingTop: \"10%\",\r\n            inDuration: 250,\r\n            onCloseEnd: null,\r\n            onCloseStart: null,\r\n            onOpenEnd: null,\r\n            onOpenStart: null,\r\n            opacity: 0.5,\r\n            outDuration: 250,\r\n            preventScrolling: true,\r\n            startingTop: \"4%\",\r\n          }}\r\n        >\r\n          <h4>Please, describe how do you need help</h4>\r\n          <div className=\"input-field col s8\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              onChange={this.handleChange}\r\n              value={this.state.title}\r\n            />\r\n            <label htmlFor=\"title\" className=\"active\">\r\n              Title\r\n            </label>\r\n          </div>\r\n          <div className=\"input-field col s8\">\r\n            <input\r\n              type=\"date\"\r\n              name=\"date\"\r\n              onChange={this.handleChange}\r\n              value={this.state.date}\r\n            />\r\n            <label htmlFor=\"date\"></label>\r\n          </div>\r\n          <p>Is the help needed a task or a material/physycal product?</p>\r\n          <p>\r\n            <label>\r\n              <input \r\n              name=\"kind\" \r\n              type=\"radio\"\r\n              value=\"task\"\r\n              onChange={this.handleChange}\r\n              />\r\n              <span>Task</span>\r\n            </label>\r\n          </p>\r\n          <p>\r\n            <label>\r\n              <input \r\n              name=\"kind\" \r\n              type=\"radio\"\r\n              value=\"material\"\r\n              onChange={this.handleChange}\r\n              />\r\n              <span>Material</span>\r\n            </label>\r\n          </p>\r\n\r\n          <div className=\"input-field col s8\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"address\"\r\n              onChange={this.handleChange}\r\n              value={this.state.address}\r\n            />\r\n            <label htmlFor=\"address\">Please enter full address</label>\r\n          </div>\r\n          <div className=\"input-field col s8\">\r\n            <textarea\r\n              type=\"text\"\r\n              name=\"description\"\r\n              onChange={this.handleChange}\r\n              value={this.state.description}\r\n              className=\"materialize-textarea\" \r\n              data-length=\"250\"\r\n              id=\"textarea2\"\r\n            >\r\n            </textarea>\r\n            <label htmlFor=\"textarea2\">description</label>\r\n          </div>\r\n          <br/>\r\n          <a\r\n            href=\"#!\"\r\n            onClick={this.handleSubmit}\r\n            className=\"teal white-text modal-close waves-effect waves-green btn-flat\"\r\n          >\r\n            Submit\r\n          </a>\r\n        </Modal>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst initCharacterCounter = () => {\r\n\r\n  return document.addEventListener('DOMContentLoaded', () => {\r\n\r\n      const elem = document.getElementById('textarea2')\r\n      return  M.CharacterCounter.init(elem)\r\n\r\n  })\r\n\r\n}\r\n\r\ninitCharacterCounter()\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    makeHelpRequest: (helpReq) => dispatch(makeHelpRequest(helpReq)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(HelpRequestModal);\r\n","C:\\web_projects\\simpleReact\\simple\\src\\components\\OtherHelpRequests.js",["211","212","213","214","215","216"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport axios from \"axios\";\r\nimport { uppdateRequest } from \"../actions/helpReqactions\";\r\nimport { API_ROOT } from \"../constants/index\"\r\n\r\nexport const UsersHelpRequests = (props) => {\r\n    const updatingHelpRequest = (id) => {\r\n        return (dispatch) => {\r\n          axios({\r\n            method: \"put\",\r\n            responseType: \"json\",\r\n            url: `${API_ROOT}/help_requests/${id}`,\r\n            data: {\r\n              condition: \"ongoing\",\r\n            },\r\n          })\r\n            .then((response) => {\r\n              props.uppdateRequest(response.data.id);\r\n              axios({\r\n                method: \"put\",\r\n                responseType: \"json\",\r\n                url: `${API_ROOT}/conversations/${id}`,\r\n                data: {\r\n                  \"complete\": null,\r\n                },\r\n              })\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n          console.log(\"called\");\r\n        };\r\n    }\r\n    const UserId = props.UserId;\r\n    const UserHelpReq = Object.entries(props.UserHelpReqs).map(([k, v]) => {\r\n\r\n        const checkHelpers = (helpers, user) => {\r\n            if (helpers == null) {\r\n              return false;\r\n            }\r\n            let helpersList = helpers.split(\",\");\r\n            if (helpersList.includes(user + \"\") == true) {\r\n              return true;\r\n            } else {\r\n              return false;\r\n            }\r\n        };\r\n\r\n        if (checkHelpers(v.helpers, UserId) == true && v.condition == \"help needed\")\r\n          return (\r\n            <tbody key={v.id}>\r\n              <tr>\r\n                <td>Name</td>\r\n                <td>{v.title}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Description</td>\r\n                <td>{v.description}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Address</td>\r\n                <td>{v.address}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Kind</td>\r\n                <td>{v.kind}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Condition</td>\r\n                <td>\r\n                  {v.condition}{\" \"}\r\n                  <a\r\n                    className=\"waves-effect waves-light btn orange darken-2\"\r\n                    onClick={updatingHelpRequest(v.id)}\r\n                  >\r\n                    <i className=\"material-icons left\">build</i>Mark as helped\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"orange\" id=\"table-divider\"></td>\r\n                <td className=\"orange lighten-2\" id=\"table-divider\"></td>\r\n              </tr>\r\n            </tbody>\r\n          );\r\n      });\r\n    return (\r\n        <table className=\"striped responsive-table\">\r\n            {UserHelpReq}\r\n        </table>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        uppdateRequest: (updated) => dispatch(uppdateRequest(updated))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersHelpRequests)","C:\\web_projects\\simpleReact\\simple\\src\\components\\MessagesArea.js",["217"],"import React ,{ Fragment } from \"react\";\r\nimport NewMessageForm2 from \"./NewMessageForm2\";\r\n\r\nconst MessagesArea = props => {\r\n  const author = props.activeUserName;\r\n  const messages = props.conversation.messages;\r\n  const helpReqID = props.conversation.help_request_id;\r\n  const convID = props.conversation.id\r\n  const title = props.conversation.title\r\n  const participants = props.conversation.participants\r\n  return (\r\n    <Fragment>\r\n    <div>\r\n      <div className=\"messagesArea\">\r\n        <h5 className=\"chat-header\">\r\n          Chat aboout the help request:{\" \"}\r\n          <span className=\"pink darken-2 white-text chat-title z-depth-3\">\r\n            {title}\r\n          </span>\r\n        </h5>\r\n        <h5>{participants}</h5>\r\n        {/*<h5>{HRI}</h5>*/}\r\n        <ul>{orderedMessages(messages, author)}</ul>\r\n      </div>\r\n    </div>\r\n    <div className=\"mFormCont\">\r\n        <NewMessageForm2 conversation_id={convID} author={author} /> \r\n    </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default MessagesArea;\r\n\r\n// helpers\r\n\r\nconst orderedMessages = (Messages, user) => {\r\n  let curUser = user\r\n  const sortedMessages = Messages.sort(\r\n    (a, b) => new Date(a.created_at) - new Date(b.created_at)\r\n  );\r\n  return sortedMessages.map((message) => {\r\n    if (message.author !== curUser) {\r\n      return (\r\n        <div\r\n          key={message.id}\r\n          className=\"chat-message  teal lighten-4 right-align\"\r\n        >\r\n          <h5 className=\"teal-text text-darken-5\">{message.author}</h5>\r\n          <p key={message.id}>{message.text}</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div key={message.id} className=\"chat-message  blue lighten-4\">\r\n          <h5 className=\"blue-text text-darken-5\">{message.author}</h5>\r\n          <p key={message.id}>{message.text}</p>\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n};\r\n","C:\\web_projects\\simpleReact\\simple\\src\\components\\Cable.js",[],"C:\\web_projects\\simpleReact\\simple\\src\\components\\NewMessageForm2.js",[],["218","219"],"C:\\web_projects\\simpleReact\\simple\\src\\components\\Images.js",[],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":44,"column":17,"nodeType":"226","endLine":44,"endColumn":21},{"ruleId":"227","severity":1,"message":"228","line":68,"column":23,"nodeType":"226","endLine":68,"endColumn":138},{"ruleId":"227","severity":1,"message":"228","line":83,"column":23,"nodeType":"226","endLine":83,"endColumn":140},{"ruleId":"229","severity":1,"message":"230","line":2,"column":10,"nodeType":"231","messageId":"232","endLine":2,"endColumn":15},{"ruleId":"229","severity":1,"message":"233","line":2,"column":17,"nodeType":"231","messageId":"232","endLine":2,"endColumn":23},{"ruleId":"234","severity":1,"message":"235","line":37,"column":17,"nodeType":"226","endLine":41,"endColumn":18},{"ruleId":"234","severity":1,"message":"236","line":56,"column":25,"nodeType":"226","endLine":56,"endColumn":50},{"ruleId":"234","severity":1,"message":"236","line":90,"column":19,"nodeType":"226","endLine":90,"endColumn":44},{"ruleId":"227","severity":1,"message":"228","line":36,"column":17,"nodeType":"226","endLine":36,"endColumn":79},{"ruleId":"229","severity":1,"message":"237","line":4,"column":8,"nodeType":"231","messageId":"232","endLine":4,"endColumn":9},{"ruleId":"238","severity":1,"message":"239","line":133,"column":19,"nodeType":"240","messageId":"241","endLine":133,"endColumn":21},{"ruleId":"234","severity":1,"message":"236","line":300,"column":13,"nodeType":"226","endLine":303,"endColumn":14},{"ruleId":"229","severity":1,"message":"237","line":4,"column":8,"nodeType":"231","messageId":"232","endLine":4,"endColumn":9},{"ruleId":"229","severity":1,"message":"242","line":6,"column":20,"nodeType":"231","messageId":"232","endLine":6,"endColumn":26},{"ruleId":"229","severity":1,"message":"243","line":7,"column":3,"nodeType":"231","messageId":"232","endLine":7,"endColumn":8},{"ruleId":"229","severity":1,"message":"244","line":8,"column":3,"nodeType":"231","messageId":"232","endLine":8,"endColumn":7},{"ruleId":"229","severity":1,"message":"245","line":9,"column":3,"nodeType":"231","messageId":"232","endLine":9,"endColumn":9},{"ruleId":"229","severity":1,"message":"246","line":10,"column":3,"nodeType":"231","messageId":"232","endLine":10,"endColumn":11},{"ruleId":"229","severity":1,"message":"247","line":4,"column":3,"nodeType":"231","messageId":"232","endLine":4,"endColumn":9},{"ruleId":"229","severity":1,"message":"248","line":5,"column":3,"nodeType":"231","messageId":"232","endLine":5,"endColumn":14},{"ruleId":"229","severity":1,"message":"249","line":6,"column":3,"nodeType":"231","messageId":"232","endLine":6,"endColumn":10},{"ruleId":"229","severity":1,"message":"237","line":10,"column":8,"nodeType":"231","messageId":"232","endLine":10,"endColumn":9},{"ruleId":"229","severity":1,"message":"250","line":17,"column":20,"nodeType":"231","messageId":"232","endLine":17,"endColumn":27},{"ruleId":"229","severity":1,"message":"251","line":63,"column":11,"nodeType":"231","messageId":"232","endLine":63,"endColumn":19},{"ruleId":"229","severity":1,"message":"252","line":65,"column":11,"nodeType":"231","messageId":"232","endLine":65,"endColumn":17},{"ruleId":"253","severity":1,"message":"254","line":108,"column":73,"nodeType":"255","messageId":"256","endLine":108,"endColumn":75},{"ruleId":"238","severity":1,"message":"257","line":130,"column":19,"nodeType":"240","messageId":"241","endLine":130,"endColumn":21},{"ruleId":"238","severity":1,"message":"239","line":132,"column":21,"nodeType":"240","messageId":"241","endLine":132,"endColumn":23},{"ruleId":"238","severity":1,"message":"239","line":133,"column":41,"nodeType":"240","messageId":"241","endLine":133,"endColumn":43},{"ruleId":"238","severity":1,"message":"239","line":137,"column":16,"nodeType":"240","messageId":"241","endLine":137,"endColumn":18},{"ruleId":"234","severity":1,"message":"236","line":148,"column":17,"nodeType":"226","endLine":151,"endColumn":18},{"ruleId":"238","severity":1,"message":"257","line":160,"column":19,"nodeType":"240","messageId":"241","endLine":160,"endColumn":21},{"ruleId":"238","severity":1,"message":"239","line":162,"column":21,"nodeType":"240","messageId":"241","endLine":162,"endColumn":23},{"ruleId":"238","severity":1,"message":"239","line":163,"column":41,"nodeType":"240","messageId":"241","endLine":163,"endColumn":43},{"ruleId":"238","severity":1,"message":"239","line":167,"column":16,"nodeType":"240","messageId":"241","endLine":167,"endColumn":18},{"ruleId":"234","severity":1,"message":"236","line":178,"column":17,"nodeType":"226","endLine":181,"endColumn":18},{"ruleId":"238","severity":1,"message":"239","line":17,"column":25,"nodeType":"240","messageId":"241","endLine":17,"endColumn":27},{"ruleId":"229","severity":1,"message":"258","line":47,"column":17,"nodeType":"231","messageId":"232","endLine":47,"endColumn":23},{"ruleId":"238","severity":1,"message":"239","line":73,"column":27,"nodeType":"240","messageId":"241","endLine":73,"endColumn":29},{"ruleId":"238","severity":1,"message":"239","line":74,"column":31,"nodeType":"240","messageId":"241","endLine":74,"endColumn":33},{"ruleId":"229","severity":1,"message":"259","line":3,"column":3,"nodeType":"231","messageId":"232","endLine":3,"endColumn":20},{"ruleId":"229","severity":1,"message":"260","line":6,"column":3,"nodeType":"231","messageId":"232","endLine":6,"endColumn":23},{"ruleId":"229","severity":1,"message":"261","line":1,"column":17,"nodeType":"231","messageId":"232","endLine":1,"endColumn":26},{"ruleId":"253","severity":1,"message":"254","line":68,"column":71,"nodeType":"255","messageId":"256","endLine":68,"endColumn":73},{"ruleId":"238","severity":1,"message":"239","line":69,"column":19,"nodeType":"240","messageId":"241","endLine":69,"endColumn":21},{"ruleId":"238","severity":1,"message":"257","line":69,"column":44,"nodeType":"240","messageId":"241","endLine":69,"endColumn":46},{"ruleId":"238","severity":1,"message":"239","line":91,"column":28,"nodeType":"240","messageId":"241","endLine":91,"endColumn":30},{"ruleId":"234","severity":1,"message":"236","line":93,"column":19,"nodeType":"226","endLine":96,"endColumn":20},{"ruleId":"234","severity":1,"message":"236","line":100,"column":19,"nodeType":"226","endLine":103,"endColumn":20},{"ruleId":"234","severity":1,"message":"236","line":115,"column":19,"nodeType":"226","endLine":118,"endColumn":20},{"ruleId":"229","severity":1,"message":"250","line":3,"column":20,"nodeType":"231","messageId":"232","endLine":3,"endColumn":27},{"ruleId":"229","severity":1,"message":"262","line":7,"column":10,"nodeType":"231","messageId":"232","endLine":7,"endColumn":17},{"ruleId":"253","severity":1,"message":"254","line":197,"column":43,"nodeType":"255","messageId":"256","endLine":197,"endColumn":45},{"ruleId":"238","severity":1,"message":"239","line":199,"column":31,"nodeType":"240","messageId":"241","endLine":199,"endColumn":33},{"ruleId":"253","severity":1,"message":"263","line":200,"column":7,"nodeType":"264","messageId":"265","endLine":200,"endColumn":14},{"ruleId":"238","severity":1,"message":"239","line":201,"column":44,"nodeType":"240","messageId":"241","endLine":201,"endColumn":46},{"ruleId":"234","severity":1,"message":"236","line":203,"column":9,"nodeType":"226","endLine":208,"endColumn":10},{"ruleId":"234","severity":1,"message":"236","line":215,"column":9,"nodeType":"226","endLine":220,"endColumn":10},{"ruleId":"229","severity":1,"message":"266","line":4,"column":25,"nodeType":"231","messageId":"232","endLine":4,"endColumn":35},{"ruleId":"229","severity":1,"message":"261","line":1,"column":17,"nodeType":"231","messageId":"232","endLine":1,"endColumn":26},{"ruleId":"253","severity":1,"message":"254","line":36,"column":73,"nodeType":"255","messageId":"256","endLine":36,"endColumn":75},{"ruleId":"238","severity":1,"message":"239","line":43,"column":49,"nodeType":"240","messageId":"241","endLine":43,"endColumn":51},{"ruleId":"238","severity":1,"message":"239","line":50,"column":45,"nodeType":"240","messageId":"241","endLine":50,"endColumn":47},{"ruleId":"238","severity":1,"message":"239","line":50,"column":68,"nodeType":"240","messageId":"241","endLine":50,"endColumn":70},{"ruleId":"234","severity":1,"message":"236","line":73,"column":19,"nodeType":"226","endLine":76,"endColumn":20},{"ruleId":"229","severity":1,"message":"267","line":7,"column":9,"nodeType":"231","messageId":"232","endLine":7,"endColumn":18},{"ruleId":"220","replacedBy":"268"},{"ruleId":"222","replacedBy":"269"},"no-native-reassign",["270"],"no-negated-in-lhs",["271"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'M' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'useRef' is defined but never used.","'useCallback' is defined but never used.","'useMemo' is defined but never used.","'HEADERS' is defined but never used.","'position' is assigned a value but never used.","'center' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","'userFR' is assigned a value but never used.","'LOAD_HELP_REQUEST' is defined but never used.","'DELETE_HELP_REQUESTS' is defined but never used.","'Component' is defined but never used.","'connect' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'RadioGroup' is defined but never used.","'helpReqID' is assigned a value but never used.",["270"],["271"],"no-global-assign","no-unsafe-negation"]